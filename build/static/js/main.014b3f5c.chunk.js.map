{"version":3,"sources":["components/MenuList.component.js","actions/filters.js","components/SimpleMenu.component.js","App.js","reducers/rowFilter.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","connect","state","rows","props","classes","React","useState","checked","setChecked","names","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","dispatch","depArray","type","depFilter","List","className","map","labelId","ListItem","key","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","id","primary","SimpleMenu","anchorEl","setAnchorEl","Tooltip","title","IconButton","event","currentTarget","aria-label","aria-controls","aria-haspopup","Menu","keepMounted","open","Boolean","onClose","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","TableCell","padding","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","color","secondary","main","lighten","light","text","dark","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","hover","aria-checked","scope","calories","fat","carbs","protein","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","createData","managementRows","internRows","engRows","rowDict","0","1","2","initialRows","rowsReducer","action","stateArray","forEach","window","location","hostname","match","store","createStore","combineReducers","rowFilter","__REDUX_DEVTOOLS_EXTENSION__","jsx","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.014b3f5c.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { connect } from \"react-redux\";\nimport { depFilter } from \"../actions/filters\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\tmaxWidth: 360,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n}));\n\nfunction CheckboxList(props) {\n\tconst classes = useStyles();\n\tconst [checked, setChecked] = React.useState([0, 1, 2]);\n\tconst names = [\"Management\", \"Engineers\", \"Interns\"];\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\n\t\tif (currentIndex === -1) {\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\n\t\tsetChecked(newChecked);\n\t\tprops.dispatch(depFilter(newChecked));\n\t};\n\n\treturn (\n\t\t<List className={classes.root}>\n\t\t\t{[0, 1, 2].map((value) => {\n\t\t\t\tconst labelId = `checkbox-list-label-${value}`;\n\n\t\t\t\treturn (\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\trole={undefined}\n\t\t\t\t\t\tdense\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tonClick={handleToggle(value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\tchecked={checked.indexOf(value) !== -1}\n\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": labelId }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText id={labelId} primary={names[value]} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t);\n\t\t\t})}\n\t\t</List>\n\t);\n}\nconst mapStateToProps = (state) => {\n\treturn {\n\t\trows: state.rows,\n\t};\n};\n\nexport default connect(mapStateToProps)(CheckboxList);\n","export const depFilter = (depArray = []) => ({\n\ttype: \"DEPARTMENT_FILTER\",\n\tdepArray,\n});\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuList from \"./MenuList.component\";\n\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nexport default function SimpleMenu() {\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip title=\"Filter departments\">\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\taria-label=\"filter list\"\n\t\t\t\t\taria-controls=\"simple-menu\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t>\n\t\t\t\t\t<FilterListIcon />\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<MenuList />\n\t\t\t</Menu>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SimpleMenu from \"./components/SimpleMenu.component\";\n\nimport { connect } from \"react-redux\";\n\n// function useRows() {\n// \tlet [rows, setRows] = useState(initialRows);\n// \treturn { rows };\n// }\n\nfunction descendingComparator(a, b, orderBy) {\n\tif (b[orderBy] < a[orderBy]) {\n\t\treturn -1;\n\t}\n\tif (b[orderBy] > a[orderBy]) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction getComparator(order, orderBy) {\n\treturn order === \"desc\"\n\t\t? (a, b) => descendingComparator(a, b, orderBy)\n\t\t: (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0], b[0]);\n\t\tif (order !== 0) return order;\n\t\treturn a[1] - b[1];\n\t});\n\treturn stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n\t{\n\t\tid: \"name\",\n\t\tnumeric: false,\n\t\tdisablePadding: true,\n\t\tlabel: \"Full name\",\n\t},\n\t{ id: \"calories\", numeric: true, disablePadding: false, label: \"ID\" },\n\t{ id: \"fat\", numeric: false, disablePadding: false, label: \"Department\" },\n\t{ id: \"carbs\", numeric: false, disablePadding: false, label: \"Title\" },\n\t{\n\t\tid: \"protein\",\n\t\tnumeric: true,\n\t\tdisablePadding: false,\n\t\tlabel: \"Years with Company\",\n\t},\n];\n\nfunction EnhancedTableHead(props) {\n\tconst {\n\t\tclasses,\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler = (property) => (event) => {\n\t\tonRequestSort(event, property);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding=\"checkbox\"></TableCell>\n\t\t\t\t{headCells.map((headCell) => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\t// align={headCell.numeric ? \"right\" : \"left\"}\n\t\t\t\t\t\talign={headCell.id === \"name\" ? \"left\" : \"right\"}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? \"none\" : \"default\"}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : \"asc\"}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\n\t\t\t\t\t\t\t\t\t{order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n}\n\nEnhancedTableHead.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n\tnumSelected: PropTypes.number.isRequired,\n\tonRequestSort: PropTypes.func.isRequired,\n\tonSelectAllClick: PropTypes.func.isRequired,\n\torder: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n\torderBy: PropTypes.string.isRequired,\n\trowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(1),\n\t},\n\thighlight:\n\t\ttheme.palette.type === \"light\"\n\t\t\t? {\n\t\t\t\t\tcolor: theme.palette.secondary.main,\n\t\t\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\n\t\t\t  }\n\t\t\t: {\n\t\t\t\t\tcolor: theme.palette.text.primary,\n\t\t\t\t\tbackgroundColor: theme.palette.secondary.dark,\n\t\t\t  },\n\ttitle: {\n\t\tflex: \"1 1 100%\",\n\t},\n}));\n\nconst EnhancedTableToolbar = (props) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t{numSelected > 0 ? (\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t>\n\t\t\t\t\t{numSelected} selected\n\t\t\t\t</Typography>\n\t\t\t) : (\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\tid=\"tableTitle\"\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t>\n\t\t\t\t\tEmployees\n\t\t\t\t</Typography>\n\t\t\t)}\n\n\t\t\t<SimpleMenu />\n\t\t</Toolbar>\n\t);\n};\n\nEnhancedTableToolbar.propTypes = {\n\tnumSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t},\n\tpaper: {\n\t\twidth: \"100%\",\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: \"rect(0 0 0 0)\",\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: \"hidden\",\n\t\tpadding: 0,\n\t\tposition: \"absolute\",\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction EnhancedTable(props) {\n\tconst classes = useStyles();\n\tconst [order, setOrder] = React.useState(\"asc\");\n\tconst [orderBy, setOrderBy] = React.useState(\"calories\");\n\tconst [selected, setSelected] = React.useState([]);\n\tconst [page, setPage] = React.useState(0);\n\tconst [dense, setDense] = React.useState(false);\n\tconst [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n\tconst handleRequestSort = (event, property) => {\n\t\tconst isAsc = orderBy === property && order === \"asc\";\n\t\tsetOrder(isAsc ? \"desc\" : \"asc\");\n\t\tsetOrderBy(property);\n\t};\n\n\tconst handleSelectAllClick = (event) => {\n\t\tif (event.target.checked) {\n\t\t\tconst newSelecteds = props.rows.map((n) => n.name);\n\t\t\tsetSelected(newSelecteds);\n\t\t\treturn;\n\t\t}\n\t\tsetSelected([]);\n\t};\n\n\tconst handleChangePage = (event, newPage) => {\n\t\tsetPage(newPage);\n\t};\n\n\tconst handleChangeRowsPerPage = (event) => {\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\n\t\tsetPage(0);\n\t};\n\n\tconst isSelected = (name) => selected.indexOf(name) !== -1;\n\n\tconst emptyRows =\n\t\trowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<EnhancedTableToolbar numSelected={selected.length} />\n\t\t\t\t<TableContainer>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\t\taria-labelledby=\"tableTitle\"\n\t\t\t\t\t\tsize={dense ? \"small\" : \"medium\"}\n\t\t\t\t\t\taria-label=\"enhanced table\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<EnhancedTableHead\n\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\t\trowCount={props.rows.length}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{stableSort(props.rows, getComparator(order, orderBy))\n\t\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t\t\t.map((row, index) => {\n\t\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.name);\n\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\t\tkey={row.name}\n\t\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\"></TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"th\"\n\t\t\t\t\t\t\t\t\t\t\t\tid={labelId}\n\t\t\t\t\t\t\t\t\t\t\t\tscope=\"row\"\n\t\t\t\t\t\t\t\t\t\t\t\tpadding=\"none\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{row.name}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.calories}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.fat}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.carbs}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.protein}</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{emptyRows > 0 && (\n\t\t\t\t\t\t\t\t<TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={props.rows.length}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tonChangePage={handleChangePage}\n\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\t\t\t/>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\trows: state.rows,\n\t};\n};\n\nexport default connect(mapStateToProps)(EnhancedTable);\n","function createData(name, calories, fat, carbs, protein) {\n\treturn { name, calories, fat, carbs, protein };\n}\n\nconst managementRows = [\n\tcreateData(\"John Smith\", 305, \"Management\", \"COO\", 4.3),\n\tcreateData(\"Haley Jules\", 408, \"Management\", \"Team Lead\", 6.5),\n\tcreateData(\"Doug Douglas\", 360, \"Management\", \"CEO\", 8),\n\tcreateData(\"Catherine Carter\", 518, \"Management\", \"CTO\", 7.0),\n];\n\nconst internRows = [\n\tcreateData(\"Jelly Chris\", 375, \"Interns\", \"Intern\", 0.0),\n\tcreateData(\"Katie Anne\", 392, \"Interns\", \"Intern\", 0.0),\n];\nconst engRows = [\n\tcreateData(\"Sally June\", 452, \"Engineering\", \"Developer\", 4.9),\n\tcreateData(\"Peter Bob\", 262, \"Engineering\", \"Senior Developer\", 6.0),\n\tcreateData(\"Frodo Baggins\", 159, \"Engineering\", \"Developer\", 4.0),\n\tcreateData(\"Tom Bombadil\", 356, \"Engineering\", \"Senior Developer\", 3.9),\n\tcreateData(\"Alice Swift\", 237, \"Engineering\", \"Developer\", 4.3),\n\tcreateData(\"Lucy Marsh\", 318, \"Engineering\", \"Junior Developer\", 2.0),\n\tcreateData(\"Oreo Jones\", 437, \"Engineering\", \"Developer\", 4.0),\n];\n\nconst rowDict = {\n\t0: managementRows,\n\t1: engRows,\n\t2: internRows,\n};\n\nconst initialRows = [...managementRows, ...engRows, ...internRows];\n\nconst rowsReducer = (state = initialRows, action) => {\n\tswitch (action.type) {\n\t\tcase \"DEPARTMENT_FILTER\":\n\t\t\tlet stateArray = [];\n\t\t\taction.depArray.forEach((el) => {\n\t\t\t\tstateArray = [...stateArray, ...rowDict[el]];\n\t\t\t});\n\t\t\tstate = stateArray;\n\n\t\t\treturn state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default rowsReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\nconst jsx = (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n);\n\nReactDOM.render(\n\tjsx,\n\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers } from \"redux\";\n\nimport rowFilter from \"../reducers/rowFilter\";\n\nexport default () => {\n\tconst store = createStore(\n\t\tcombineReducers({ rows: rowFilter }),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t);\n\n\treturn store;\n};\n"],"sourceRoot":""}